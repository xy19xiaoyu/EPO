#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.3634
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace EPO_Get
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="xy")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGetEPO(GetEPO instance);
    partial void UpdateGetEPO(GetEPO instance);
    partial void DeleteGetEPO(GetEPO instance);
    partial void InsertEPO_ACD(EPO_ACD instance);
    partial void UpdateEPO_ACD(EPO_ACD instance);
    partial void DeleteEPO_ACD(EPO_ACD instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::EPO_Get.Properties.Settings.Default.xyConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<GetEPO> GetEPO
		{
			get
			{
				return this.GetTable<GetEPO>();
			}
		}
		
		public System.Data.Linq.Table<EPO_ACD> EPO_ACD
		{
			get
			{
				return this.GetTable<EPO_ACD>();
			}
		}
	}
	
	[Table(Name="dbo.GetEPO")]
	public partial class GetEPO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _PubId;
		
		private string _Result;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _PubId2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnPubIdChanging(string value);
    partial void OnPubIdChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnPubId2Changing(string value);
    partial void OnPubId2Changed();
    #endregion
		
		public GetEPO()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_PubId", DbType="VarChar(40)")]
		public string PubId
		{
			get
			{
				return this._PubId;
			}
			set
			{
				if ((this._PubId != value))
				{
					this.OnPubIdChanging(value);
					this.SendPropertyChanging();
					this._PubId = value;
					this.SendPropertyChanged("PubId");
					this.OnPubIdChanged();
				}
			}
		}
		
		[Column(Storage="_Result", DbType="VarChar(20)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[Column(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[Column(Storage="_PubId2", DbType="VarChar(40)")]
		public string PubId2
		{
			get
			{
				return this._PubId2;
			}
			set
			{
				if ((this._PubId2 != value))
				{
					this.OnPubId2Changing(value);
					this.SendPropertyChanging();
					this._PubId2 = value;
					this.SendPropertyChanged("PubId2");
					this.OnPubId2Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.EPO_ACD")]
	public partial class EPO_ACD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _PubId;
		
		private string _abs;
		
		private string _Cls;
		
		private string _Des;
		
		private string _PubID2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnPubIdChanging(string value);
    partial void OnPubIdChanged();
    partial void OnabsChanging(string value);
    partial void OnabsChanged();
    partial void OnClsChanging(string value);
    partial void OnClsChanged();
    partial void OnDesChanging(string value);
    partial void OnDesChanged();
    partial void OnPubID2Changing(string value);
    partial void OnPubID2Changed();
    #endregion
		
		public EPO_ACD()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_PubId", DbType="VarChar(50)")]
		public string PubId
		{
			get
			{
				return this._PubId;
			}
			set
			{
				if ((this._PubId != value))
				{
					this.OnPubIdChanging(value);
					this.SendPropertyChanging();
					this._PubId = value;
					this.SendPropertyChanged("PubId");
					this.OnPubIdChanged();
				}
			}
		}
		
		[Column(Storage="_abs", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string abs
		{
			get
			{
				return this._abs;
			}
			set
			{
				if ((this._abs != value))
				{
					this.OnabsChanging(value);
					this.SendPropertyChanging();
					this._abs = value;
					this.SendPropertyChanged("abs");
					this.OnabsChanged();
				}
			}
		}
		
		[Column(Storage="_Cls", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Cls
		{
			get
			{
				return this._Cls;
			}
			set
			{
				if ((this._Cls != value))
				{
					this.OnClsChanging(value);
					this.SendPropertyChanging();
					this._Cls = value;
					this.SendPropertyChanged("Cls");
					this.OnClsChanged();
				}
			}
		}
		
		[Column(Storage="_Des", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Des
		{
			get
			{
				return this._Des;
			}
			set
			{
				if ((this._Des != value))
				{
					this.OnDesChanging(value);
					this.SendPropertyChanging();
					this._Des = value;
					this.SendPropertyChanged("Des");
					this.OnDesChanged();
				}
			}
		}
		
		[Column(Storage="_PubID2", DbType="VarChar(50)")]
		public string PubID2
		{
			get
			{
				return this._PubID2;
			}
			set
			{
				if ((this._PubID2 != value))
				{
					this.OnPubID2Changing(value);
					this.SendPropertyChanging();
					this._PubID2 = value;
					this.SendPropertyChanged("PubID2");
					this.OnPubID2Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
